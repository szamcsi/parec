#!/bin/bash
#
# Functional test for 'parec'.
#
# Copyright (c) Akos FROHNER <akos@frohner.hu> 2009.
# License: GPLv2

set -e

tmpprefix='checksums-test.tmp'
trap "rm -f $tmpprefix*" EXIT

function create_tree {
    rm -rf dataset
    # creating a test tree
    mkdir -p dataset
    echo '1' >dataset/file1
    echo '2' >dataset/file2
    echo '3' >dataset/file3
    mkdir -p dataset/subdir1
    echo '11' >dataset/subdir1/file11
    echo '12'  >dataset/subdir1/file12
    mkdir -p dataset/subsubdir11
    echo '111' >dataset/subsubdir11/file111
    mkdir -p dataset/subdir2
    echo '21' >dataset/subdir2/file21
    echo '22' >dataset/subdir2/file22

    # calculating checksums the traditional way
    find dataset -type f | xargs sha1sum >$tmpprefix.sha1sum
    find dataset -type f | xargs md5sum >$tmpprefix.md5sum
}

function clean_file {
    local file="$1"
    getfattr $file | while read attr; do
        case $attr in
            user.md5|user.sha1|user.mtime)
                setfattr -x $attr $file
                ;;
        esac
    done
}

function clean_tree {
    find dataset | while read file; do
        clean_file $file
    done
}

function check_file {
    local file="$1"
    # checking the results
    getfattr --dump --encoding=hex $file | while read attr; do
        case $attr in
            user.md5=*)
                checksum=$(grep $file $tmpprefix.md5sum | cut -d\  -f 1)
                if [ $attr != "user.md5=0x$checksum" ]; then
                    echo "MD5 checksum of '$file' has changed"
                    return 1
                fi
                ;;
            user.sha1=*)
                checksum=$(grep $file $tmpprefix.sha1sum | cut -d\  -f 1)
                if [ $attr != "user.sha1=0x$checksum" ]; then
                    echo "SHA1 checksum of '$file' has changed"
                    return 1
                fi
                ;;
        esac
    done
}

function check_tree {
    find dataset -type f | while read file; do
        check_file $file
        if [ $? -ne 0 ]; then
            return $?
        fi
    done
}

create_tree
clean_tree

# calculating checksums
#find dataset -type f | xargs ./checksums 
./checksums dataset

echo -n "test 01: file checksums -- "
check_tree
echo "OK"


# 'getfattr --only-values' ignores the '--encoding=hex' option
dataset_md5=$(getfattr --encoding=hex --name=user.md5 dataset | awk -F= '/^user.md5/ { print $2 }')
dataset_sha1=$(getfattr --encoding=hex --name=user.sha1 dataset | awk -F= '/^user.sha1/ { print $2 }')

dataset_md5_ref='0xe980a6fc42b3257c84e7ef3365479005'
if [ "$dataset_md5" != "$dataset_md5_ref" ]; then
    echo "MD5 checksum ($dataset_md5) of 'dataset' does not match the reference ($dataset_md5_ref1)"
    exit 1
fi
dataset_sha1_ref='0x561453f28681de9c19baaa7afff350efe9201e2d'
if [ "$dataset_sha1" != "$dataset_sha1_ref" ]; then
    echo "SHA1 checksum ($dataset_sha1) of 'dataset' does not match the reference ($dataset_sha1_ref1)"
    exit 1
fi

# changing the tree
echo '1.changed' >dataset/file1

# re-calculating the checksums
./checksums --force dataset

echo -n "test 02: file changed, checksum should differ -- "
# expected to fail
set +e
check_tree
set -e

# directory checksum should have changed:
dataset_md5_1=$(getfattr --encoding=hex --name=user.md5 dataset | awk -F= '/^user.md5/ { print $2 }')
echo -n "test 03: changed directory checksum -- "
if [ $dataset_md5 = $dataset_md5_1 ]; then
    echo "MD5 checksum has not changed"
    exit 1
fi
dataset_sha1_1=$(getfattr --encoding=hex --name=user.sha1 dataset | awk -F= '/^user.sha1/ { print $2 }')
if [ $dataset_sha1 = $dataset_sha1_1 ]; then
    echo "MD5 checksum has not changed"
    exit 1
fi
echo "OK"

# renaming file
dataset_md5=$dataset_md5_1
dataset_sha1=$dataset_sha1_1
mv dataset/file2 dataset/changed.file2
./checksums --force dataset
# directory checksum should not have changed
dataset_md5_1=$(getfattr --encoding=hex --name=user.md5 dataset | awk -F= '/^user.md5/ { print $2 }')
echo -n "test 03: directory checksum invariant to rename -- "
if [ $dataset_md5 != $dataset_md5_1 ]; then
    echo "MD5 checksum has changed"
    exit 1
fi
dataset_sha1_1=$(getfattr --encoding=hex --name=user.sha1 dataset | awk -F= '/^user.sha1/ { print $2 }')
if [ $dataset_sha1 != $dataset_sha1_1 ]; then
    echo "MD5 checksum has changed"
    exit 1
fi
echo "OK"

echo -n "test 04: testing exclude patterns -- "
touch dataset/file1~
mkdir dataset/.garbage
touch dataset/.garbage/file1g
./checksums --force --exclude '*~' --exclude '.garbage' dataset
# directory checksum should not have changed
dataset_md5_1=$(getfattr --encoding=hex --name=user.md5 dataset | awk -F= '/^user.md5/ { print $2 }')
if [ $dataset_md5 != $dataset_md5_1 ]; then
    echo "MD5 checksum has changed"
    exit 1
fi
dataset_sha1_1=$(getfattr --encoding=hex --name=user.sha1 dataset | awk -F= '/^user.sha1/ { print $2 }')
if [ $dataset_sha1 != $dataset_sha1_1 ]; then
    echo "MD5 checksum has changed"
    exit 1
fi
echo "OK"

echo -n "test 04: without exclude patterns it shall differ -- "
./checksums --force dataset
# directory checksum should not have changed
dataset_md5_1=$(getfattr --encoding=hex --name=user.md5 dataset | awk -F= '/^user.md5/ { print $2 }')
if [ $dataset_md5 = $dataset_md5_1 ]; then
    echo "MD5 checksum has not changed"
    exit 1
fi
dataset_sha1_1=$(getfattr --encoding=hex --name=user.sha1 dataset | awk -F= '/^user.sha1/ { print $2 }')
if [ $dataset_sha1 = $dataset_sha1_1 ]; then
    echo "MD5 checksum has not changed"
    exit 1
fi
echo "OK"
# re-calculating for further tests
./checksums --force --exclude '*~' --exclude '.garbage' dataset

#echo $dataset_md5
#echo $dataset_md5_1
#echo $dataset_sha1
#echo $dataset_sha1_1

